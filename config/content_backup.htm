<h1>About</h1>
<p>網頁: <a class="Link--inTextBlock" href="https://wmrtbij49h.github.io/cd2024/">https://wmrtbij49h.github.io/cd2024/</a></p>
<p>網誌: <a href="https://wmrtbij49h.github.io/cd2024/blog">https://wmrtbij49h.github.io/cd2024/<span>blog</span></a></p>
<p>簡報: <a href="https://wmrtbij49h.github.io/cd2024/revel">https://wmrtbij49h.github.io/cd2024/revel</a></p>
<p>倉儲:<a href="https://github.com/Wmrtbij49h/cd2024" title="https://github.com/Wmrtbij49h/cd2024">https://github.com/Wmrtbij49h/cd2024</a></p>
<p>本 cmsimde 網際內容管理系統的對應 Template 倉儲:</p>
<p style="padding-left: 30px;"><a href="https://github.com/mdecycu/cmsimde_site">https://github.com/mdecycu/cmsimde_site</a></p>
<p style="padding-left: 30px;">此 Template 將 cmsimde 作為子目錄而非子模組, 使用者可以依照需求自行修改</p>
<p style="padding-left: 30px;">倉儲對應網站: <a href="https://mde.tw/cmsimde_site">https://mde.tw/cmsimde_site</a></p>
<h1>cmsimde</h1>
<p><span style="background-color: #ccffcc;">SMap</span> - SiteMap - 依照階次列出網站的所有頁面.</p>
<p><span style="background-color: #ccffcc;">EditA</span> - Edit All page - 將所有頁面放入編輯模式中, 主要用來處理頁面搬遷, 刪除或決定衝突頁面內容版本.</p>
<p><span style="background-color: #ccffcc;">Edit</span> - Edit page - 先選擇要編輯的單一頁面後, 再點選 Edit, 即可進入單一頁面的編輯模式.</p>
<p><span style="background-color: #ccffcc;">Config</span> - Configure Site - 編輯頁面標題與管理者密碼.</p>
<p><span style="background-color: #ccffcc;">Search</span> - 動態頁面內容的關鍵字搜尋.</p>
<p><span style="background-color: #ccffcc;">IUpload</span> - Image file Upload - 圖檔的上傳功能, 可以上傳 jpg, png 與 gif 檔案, 其中若在手機上傳圖檔, 系統會自動將圖片檔案縮小為 800x800 大小.</p>
<p><span style="background-color: #ccffcc;">IList</span> - Image file List - 列出可以直接在頁面編輯模式中引用的圖片檔案.</p>
<p><span style="background-color: #ccffcc;">FUpload</span> - File Upload - 一般檔案的上傳功能, 目前可以上傳的檔案副檔名包括 'jpg', 'png', 'gif', '7z', 'pdf', 'zip', 'ttt', 'stl', 'txt', 'html', 'mp4' 等, 使用者可以自行修改.</p>
<p><span style="background-color: #ccffcc;">FList</span> - File List - 列出可以直接在頁面編輯模式中引用的上傳檔案.</p>
<p><span style="background-color: #ccffcc;">Logout</span> - 登出頁面編輯模式.</p>
<p><span style="background-color: #ccffcc;">Convert</span> - 將動態網站中位於 config/content.htm 檔案, 透過分頁設定轉為 content 目錄中的靜態網頁.</p>
<p><span style="background-color: #ccffcc;">acp</span> - git add, git commit 與 git push, 通常只有在 localhost 或自架主機上利用網頁表單協助將倉儲改版內容推向 Github 倉儲.</p>
<p><span style="background-color: #ccffcc;">SStatic</span> - Start Static Site - 利用 Python 啟動網站伺服功能, 可以讓使用者檢查轉檔後的靜態網站內容.</p>
<p><span style="background-color: #ccffcc;">RStatic</span> - Replit Static Site URL - 僅用於 Replit 模式, 當使用者按下 SStatic 後, 可以按下 RStatic 進入當下尚未推向 Github Pages 的靜態網站.</p>
<p><span style="background-color: #ccffcc;">80</span> - 由 init.py 中 static_port 所決定的連結字串, 一般不使用 80, 只有在 Replit 中為了與動態網站共用 port, 才特別設為 80.</p>
<p></p>
<h1>Replit</h1>
<p><a href="https://replit.com">https://replit.com</a></p>
<p>利用 init_replit 指令安裝所需 Python 模組<br/><br/>chmod u+x init_replit<br/><br/>./init_replit</p>
<p dir="auto">On Replit:</p>
<p dir="auto">.replit: python3 main.py</p>
<p dir="auto">chmod u+x cms init_replit</p>
<p dir="auto">./init_replit</p>
<p dir="auto" style="padding-left: 30px;">for cmsimde_site (not needed): git submodule update --init --recursive</p>
<p dir="auto" style="padding-left: 30px;">for cmsimde: pip install flask flask_cors bs4 lxml pelican markdown gevent</p>
<p dir="auto">password generator: <a href="https://mde.tw/cmsite/content/Brython.html?src=https://gist.githubusercontent.com/mdecycu/b92b16621dd0246c352cf13d6463b333/raw/0bfa669750aba3abe48554509bbd43d65b6e5c82/hashlib_password_generator.py">https://mde.tw/cmsite/content/Brython.html?src=https://gist.githubusercontent.com/mdecycu/b92b16621dd0246c352cf13d6463b333/raw/0bfa669750aba3abe48554509bbd43d65b6e5c82/hashlib_password_generator.py</a> </p>
<p dir="auto"></p>
<p dir="auto">for IPv6 only Ubuntu:<br/><br/>.ssh 目錄中的 config, 將 SSH session 名稱設為 github.com:<br/><br/>Host github.com<br/>User git<br/>Hostname github.com<br/>ProxyCommand /usr/bin/ncat --proxy p4.cycu.org:3128 --proxy-type http %h %p<br/><br/>for Replit:<br/><br/>.ssh 目錄中的 config, 將 SSH session 名稱設為 github.com:<br/><br/>Host github.com<br/>User git<br/>Hostname github.co<br/>#since Replit works for IPv4, therefore no ProxyCommand setting needed<br/>#ProxyCommand /usr/bin/ncat --proxy p4.cycu.org:3128 --proxy-type http %h %p</p>
<p></p>
<p></p>
<h1>Brython</h1>
<p><a href="https://en.wikipedia.org/wiki/Python_(programming_language)">https://en.wikipedia.org/wiki/Python_(programming_language)</a></p>
<h4>Examples:</h4>
<p style="padding-left: 30px;"><a href="https://gist.github.com/mdecycu/d9082d678096bd58378d6afe2c7fa05d">https://gist.github.com/mdecycu/d9082d678096bd58378d6afe2c7fa05d</a></p>
<p style="padding-left: 30px;"><a href="https://www.geeksforgeeks.org/python-programming-examples/">https://www.geeksforgeeks.org/python-programming-examples/</a></p>
<p style="padding-left: 30px;"><a href="https://www.programiz.com/python-programming/examples">https://www.programiz.com/python-programming/examples</a></p>
<p style="padding-left: 30px;"><a href="https://www.freecodecamp.org/news/python-code-examples-sample-script-coding-tutorial-for-beginners/">https://www.freecodecamp.org/news/python-code-examples-sample-script-coding-tutorial-for-beginners/</a></p>
<h4>Python Tutorial:</h4>
<p style="padding-left: 30px;"><a href="https://docs.python.org/3/tutorial/">https://docs.python.org/3/tutorial/</a></p>
<p style="padding-left: 30px;"><a href="https://docs.python.org/3/tutorial/introduction.html">An informal introduction to Python</a></p>
<h4>Indentation (Python 採 4 個 Spaces 縮排, 以界定執行範圍)</h4>
<h4>Variables (<a href="https://github.com/python/cpython/blob/3.11/Lib/keyword.py">Python Keywords</a>)</h4>
<h4>Comments (# 單行註解, 三個單引號或三個雙引號標註多行註解)</h4>
<h4><a href="https://docs.python.org/3/tutorial/introduction.html#numbers">Numbers</a> (整數 int(), 浮點數 float())</h4>
<h4><a href="https://docs.python.org/3/tutorial/introduction.html#strings">Strings</a> (字串)</h4>
<h4>print (Python 內建函式, <a href="https://docs.python.org/3/library/functions.html#print">print()</a> 函式)</h4>
<p><a href="https://docs.python.org/3/tutorial/controlflow.html">Python control flow tools</a></p>
<h4 style="padding-left: 30px;"><a href="https://docs.python.org/3/tutorial/controlflow.html#for-statements">for</a></h4>
<h4 style="padding-left: 30px;"><a href="https://docs.python.org/3/tutorial/controlflow.html#if-statements">if</a></h4>
<h4 style="padding-left: 30px;"><a href="https://docs.python.org/3/tutorial/controlflow.html#the-range-function">range</a></h4>
<h4>open</h4>
<h4>read</h4>
<h4><a href="https://docs.python.org/3/tutorial/introduction.html#lists">lists</a></h4>
<h4><a href="https://docs.python.org/3/tutorial/datastructures.html#tuples-and-sequences">tuples</a></h4>
<h4><a href="https://docs.python.org/3/tutorial/datastructures.html#dictionaries">dictionaries</a></h4>
<h4><a href="https://docs.python.org/3/tutorial/controlflow.html#defining-functions">functions</a></h4>
<h4><a href="https://docs.python.org/3/tutorial/errors.html#exceptions">try ... except</a></h4>
<h4><a href="https://docs.python.org/3/tutorial/controlflow.html#break-and-continue-statements-and-else-clauses-on-loops">break</a></h4>
<h4><a href="https://docs.python.org/3/tutorial/controlflow.html#pass-statements">pass</a></h4>
<h4><a href="https://docs.python.org/3/tutorial/classes.html?highlight=classes">classes</a></h4>
<p>這個頁面 demo 如何在同一頁面下納入多個線上 Ace 編輯器與執行按鈕 (<a href="/downloads/practice_html.txt">practice_html.txt</a> 動態頁面超文件).</p>
<p><a href="/downloads/practice_html.txt">practice_html.txt</a> 動態頁面超文件應該可以在啟動 Brython 時, 設定將 .py 檔案放入 downloads/py 目錄中引用.</p>
<p>亦即將所有對應的 html 也使用 Brython 產生, 然後寫為 <a href="https://docs.python.org/3/tutorial/classes.html">class</a> 後, 在範例導入時透過 <a href="https://docs.python.org/3/tutorial/classes.html#instance-objects">instance</a> 引用.</p>
<pre class="brush:html;auto-links:false;toolbar:false" contenteditable="false">&lt;!-- 啟動 Brython --&gt;
&lt;script&gt;
window.onload=function(){
brython({debug:1, pythonpath:['/static/','./../downloads/py/']});
}
&lt;/script&gt;</pre>
<p>從 1 累加到 100:</p>
<p><button id="add1to100">1 add to 100</button></p>
<p>將 iterable 與 iterator <a href="https://home.gamer.com.tw/creationDetail.php?sn=4337438">相關說明</a>, 利用 Brython 與 Ace Editor 整理在這個頁面.</p>
<h1>影片</h1>
<!-- 導入 brython 程式庫 -->
<p>
<script src="/static/brython.js"></script>
<script src="/static/brython_stdlib.js"></script>
</p>
<!-- 啟動 Brython -->
<p>
<script>
window.onload=function(){
brython({debug:1, pythonpath:['/static/','./../downloads/py/']});
}
</script>
</p>
<p><!-- 導入 FileSaver 與 filereader --></p>
<p>
<script src="/static/ace/FileSaver.min.js" type="text/javascript"></script>
<script src="/static/ace/filereader.js" type="text/javascript"></script>
</p>
<p><!-- 導入 ace --></p>
<p>
<script src="/static/ace/ace.js" type="text/javascript"></script>
<script src="/static/ace/ext-language_tools.js" type="text/javascript"></script>
<script src="/static/ace/mode-python3.js" type="text/javascript"></script>
<script src="/static/ace/snippets/python.js" type="text/javascript"></script>
</p>
<p><!-- 導入 gearUtils-0.9.js Cango 齒輪繪圖程式庫 -->
<script src="/static/Cango-24v03-min.js"></script>
<script src="/static/gearUtils-09.js"></script>
<script src="/static/SVGpathUtils-6v03-min.js"></script>
<script src="/static/sylvester.js"></script>
<script src="/static/PrairieDraw.js"></script>
</p>
<p><!-- 請注意, 這裡使用 Javascript 將 localStorage["kw_py_src1"] 中存在近端瀏覽器的程式碼, 由使用者決定存檔名稱--></p>
<p>
<script type="text/javascript">
function doSave(storage_id, filename){
    var blob = new Blob([localStorage[storage_id]], {type: "text/plain;charset=utf-8"});
    filename = document.getElementById(filename).value
    saveAs(blob, filename+".py");
}
</script>
</p>
<p>
<script type="text/python3">
from browser import document as doc
import ace
# 清除畫布
def clear_bd1(ev):
    bd = doc["brython_div1"]
    bd.clear()
Ace1 = ace.Editor(editor_id="kw_editor1", console_id="kw_console1", container_id="kw__container1", storage_id="kw_py_src1" )
# 從 gist 取出程式碼後, 放入 editor 作為 default 程式
def run1():
    # 利用 get 取下 src 變數值
    try:
        url = doc.query["src"]
    except:
        url = "https://gist.githubusercontent.com/mdecourse/0229a8a017091476a79700b8a190f185/raw/c3a6deaf717f8f2739a4b1392a5ab10936e9693a/from_1_add_to_10_1.py"
    prog = open(url).read()

    # 將程式載入編輯區
    Ace1.editor.setValue(prog)
    Ace1.editor.scrollToRow(0)
    Ace1.editor.gotoLine(0)
    # 直接執行程式
    #ns = {'__name__':'__main__'}
    #exec(prog, ns)
    # 按下 run 按鈕
    Ace1.run()

# 執行程式, 顯示輸出結果與清除輸出結果及對應按鈕綁定
doc['kw_run1'].bind('click', Ace1.run)
doc['kw_show_console1'].bind('click', Ace1.show_console)
doc['kw_clear_console1'].bind('click', Ace1.clear_console)
doc['clear_bd1'].bind('click', clear_bd1)
# 呼叫函式執行
run1()
</script>
</p>
<p><!-- add 1 to 100 開始 -->
<script type="text/python3">
from browser import document as doc
import ace

# 清除畫布
def clear_bd1(ev):
    bd = doc["brython_div1"]
    bd.clear()

# 利用 ace 中的 Editor 建立 Ace2 物件, 其中的輸入變數分別對應到頁面中的編輯區物件
Ace2 = ace.Editor(editor_id="kw_editor1", console_id="kw_console1", container_id="kw__container1", storage_id="kw_py_src1" )

add1to100_url = "https://gist.githubusercontent.com/mdecourse/0229a8a017091476a79700b8a190f185/raw/c48e37714f055c3a0027cbfef59e442a6ef659b9/from_1_add_to_100_1.py"

# 從 gist 取得程式碼
add_src = open(add1to100_url).read()
def add(ev):
    Ace2.editor.setValue(add_src)
    Ace2.editor.scrollToRow(0)
    Ace2.editor.gotoLine(0)
    Ace2.run()

# id 為 "add1to100" 的按鈕點按時, 執行 add 方法
doc["add1to100"].bind('click', add)
</script>
</p>
<p><!-- add 1 to 100 結束--></p>
<!-- editor1 開始 -->
<p><!-- 用來顯示程式碼的 editor 區域 --></p>
<h2>w1 setup</h2>
<p><iframe allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" allowfullscreen="allowfullscreen" frameborder="0" height="315" referrerpolicy="strict-origin-when-cross-origin" src="https://www.youtube.com/embed/81LNpVtI8sM?si=FVu5BnV3XhtUYmOr" title="YouTube video player" width="560"></iframe></p>
<p>好的。<br/>好那我們來看一下就是說在這裏面呢我們要設定網字的話<br/>我們必須要先知道說網字的文字檔啊<br/>就是他的這個原始的啊文稿是在Mac檔這個目錄下<br/>然後一旦他經由Pet tic轉完之後啊<br/>他的html抄文件會放到B rog<br/>好那這個是第一個概念<br/>好那第二個概念就是他是利用啊這個<br/>佩利肯的啊這個套件<br/>因爲你只要有注意到的話<br/>我們其實一開始在啊這個安裝模組的時候啊<br/>我們其實就已經有把這個佩利肯裝進來在這裏<br/>所以這個是網字<br/>然後他之所以能夠辨識這個模型是因爲我們裝了模型的模組<br/>好那其他前面這些模組都是CMS IMD在用<br/>好大概是這樣<br/>好所以透過因爲我們已經有安裝這個啊佩利肯模組<br/>所以我們就可以利用這個工具來轉入我們的網質<br/>可是他的這個網質轉檔他是有設定檔的<br/>跟我們的網質有關的設定檔總共有三個<br/>一個叫標誌底線Paris config點py<br/>好那這個所謂logo的意思就是你轉完的啊這個<br/>那麼網字啊他所有的連結都是用相對目錄的<br/>這個是適合在近端看的<br/>但遠端也是可以看的啊<br/>意思就是說他並不是用絕對網路的路徑在進行設定的哦<br/>那通常你不要有留言板的話你就可以用這個<br/>好那用留言板<br/>所謂留言板就說你在每一篇網字底下<br/>你可以想辦法用奢帕體就是第三方的這個工具啊<br/>然後來啓動<br/>一個留言的一個功能<br/>那這個留言的功能因爲他要記錄你的絕對網址啊<br/>所以你就不能用相對位置了<br/>因爲他就不曉得啊你的絕對網址是什麼<br/>所以這個時候我們就必須要用這個設定來轉檔<br/>好那共用的轉檔的檔案就是這個<br/>好那我們來看一下我應該是反過來然後這個是<br/>好這個要加留言的這個是共用的啊<br/>那我們把它打開就知道了<br/>所以你只要打開這個就會在我們的編輯器裏面<br/>那我現在是習慣把所有的小頁面呢都放在一起<br/>然後因爲我在這裏只要有編輯相關的檔案我馬上就可以切換來看<br/>好那能夠使用的這個編輯器的啊這個位置也會比較大<br/>好那這裏面看起來他是拍省的城市<br/>那看起來是沒有任何我們必須要進行設定的<br/>好的。<br/>應該沒有所以這個是可以擺姿勢的啊<br/>但是假如共用的這個你把它打開看<br/>這裏面就你就必須要進行相關的設定啊<br/>你的作者就是你的學號OK<br/>你的S ime就是你這個網字的名稱<br/>所以這個名稱待會我們轉檔他就會出現在我們的網字最上頭OK<br/>那底下這個是啊這個<br/>他們這種的話是我們是以臺灣的哈又貼又加8的是啊<br/>這個時區往那底下這邊應該也沒有要改的<br/>所以你要改的部分就只有改<br/>作者跟你的啊網字的標題<br/>那網字標題你可以寫<br/>你這邊應該可以寫協同產品設計實習OK好<br/>那看你要不要加上你的學號<br/>OK這個這個是課程名稱哦那前面你可以加上你自己的學號<br/>好那最後我們現在看的是佩利肯扛費<br/>最後一個是巴黎扛費<br/>那這個裏面你可能基本上就必須要改這個E RL<br/>好因爲這個就是你<br/>前面這個就是你的網制的啊這一個那麼<br/>王子好那<br/>你的王子應該是比方說我的學號假如是一個<br/>我的學號假如是一個<br/>你的王子應該是給他點來哦<br/>然後再加上CD 2024<br/>好所以你這個<br/>檔案呢也就是發佈配置的這一個<br/>你要改的就是這個賽網址<br/>然後假如是根據這樣的一個格式的話<br/>這個就是你的登錄到給他們的賬號<br/>那這樣的話他就可以轉完之後啊<br/>他就會用這個來找到你的每一個網字的頁面<br/>好那其他的部分<br/>其實這底下是我不曉得你是可不可以用我的了哈你這個先不要改看看<br/>好那這樣的話你一旦轉檔其實你已經可以那麼看到那到底要怎麼轉檔<br/>我是透過一個檔案<br/>它叫做將軍<br/>這個<br/>好那可是這個Jim b rog你假如輸入進來啊他必須是可以執行的<br/>所以你就要執行這個勸解MOD<br/>要加上x<br/>然後要讓Jimbrog<br/>可以執行這個指定你一定要做<br/>因爲你硬迫進來啊他這個答案是不能執行的<br/>好所以你要改變他這個答案的屬性<br/>空一格又是代表使用者<br/>要讓他加上x是直行的意思<br/>好那這樣的話我只要在上面Mac檔的末路下<br/>按照格式好<br/>那這個格式就很重要<br/>可是你要做這個格式之前呢我們這邊有一個配置<br/>這邊你要有一個配置萬底線<br/>針對他底線底下這邊啊反映出正確的倉儲網站簡報跟網字好<br/>那裏面用到的是憤怒相關的這個你要你要來更改好<br/>那倉儲的部分就是前面這個就是你的<br/>你的這個王子<br/>倉儲的王子<br/>後面這個就是顯示出倉儲王子其實兩個是一樣的<br/>好那網站的部分就是<br/>我們的這個電話配置<br/>上面那一頁繡出來的那個網站的連接<br/>啊就是你的電話的賬號<br/>點給他點IO斜線CD 2024那簡報就是加上re bu<br/>網字就是加上兄弟<br/>那你這個要自己更改<br/>好那假設說好那我們這一個格式就非常重要啊<br/>這個格式的部分你可以扣<br/>因爲這一這一頁應該大家可能都有<br/>其中一定有一個點MD<br/>然後然後前面這個至於這個檔案的名稱你可以自己選<br/>可以選日期可以選周可以選啊你認爲啊比較容易來分別啊<br/>因爲他的每一個MD檔不能重複嗎<br/>OK所以我我是用日期做的好<br/>那這邊的格式就非常重要了<br/>前面這8行啊格式是不能亂改的好<br/>因爲每一片網字他都是由這個格式來辨別的<br/>那麼時間的部分你一定要按照他的這個語法啊連待日夜待時日空一格<br/>然後啊幾個小時<br/>慢哈後面是秒<br/>好那我其實我都沒有造時間呢我都是早上11點啊<br/>因爲通常那個時候應該應該比較清醒啊好<br/>其实我每一篇网字我这个都只是改日期而已<br/>好那这个标题就是看你是第几周的网字因为我们要求你是每一周都写啊<br/>好那第一周的话你只要已经学会了你就可以这里开始写你的第一周<br/>啊那至于类别跟关键字这个你自己看你要怎么分辨<br/>你只要要像我的话我基本上我这个是班级吗<br/>OK那你只要我们现在还没有给你组别的话哦你可以看<br/>这边我们还没有啊这个选好<br/>每一组至多8人<br/>然后所以组别可能是下礼拜才能确定<br/>所以这边呢我们一开始你先学试着把这个编辑的部分把它啊这个写上去<br/>反正是可以改的吧<br/>好那这个就是关键字<br/>那你的category基本上就是啊这个一个<br/>然后你的关键字角有一个以上的话你就用逗点隔开<br/>OK比方说我这里就讲到这个推理肯<br/>OK类似这样那最重要的就是第六行<br/>因为第六行上面的字串啊<br/>他就是拿来转换网的那个超文件的档案名称<br/>哎意思是什么意思是每一个网字要有一个独立独一的这个12<br/>那通常我会用英文的原因是你用中文他转出来的他会自动帮你转拼音<br/>啊因为他这个可能是中国人做的<br/>所以你只要写中文的话他会用中国的拼音帮你把中文转成英文OK<br/>他转到最后我也看不懂<br/>好但是你大概念的话是念的出那个中文的发音呐<br/>哦因为毕竟他们也是好几十亿人在用啊<br/>但是基本上的话就是说我我是比较习惯直接就写英文啊<br/>但是每一个网字都要不同的啊不同的这个好<br/>所以假设我们现在因为这个已经经过改版了啊<br/>所以<br/>你前面所写的这个八行一定要照这个格式<br/>然后在这个12行之前呢他是摘药啊这个不能这个不能乱乱改了哈<br/>第十二行一定要照这个<br/>那前面你可以有一行到两行的这个摘药<br/>就是说他绣出来的时候这个是x水啊<br/>就是你这一篇到底在讲什么<br/>而且只是写在第10行或者通常会摘药不会太长啊<br/>大概一行两行了不起<br/>好那后面的部分<br/>他的这个标题的大小是用井字号来代表的假如是一个井字号空一格<br/>这个是大标题最大的好<br/>那你只要要小标的话你就变成说我就两个<br/>意思就是这个这个字形会比较大<br/>这个会比较小好<br/>然后底下的话你假如再有三三个井字号的话就是3标<br/>类似这样好<br/>所以底下的部分就是我们还有一些格式<br/>你现在先把你前面我们所讲的这些啊我们先把它设定好<br/>然后你跑到这边来<br/>你一旦让他可以执行<br/>而且我们直接执行这个GEN Brock<br/>前面一定要打目前所在位置<br/>否则他找不到你只要只有打Gmbro<br/>他不晓得你是<br/>要执行哪一个好<br/>所以我们这样子按下去之后他就会帮我佩利肯就会帮我们转打OK<br/>那转档看目前应该只有一篇吗<br/>好所以他就一个阿迪口OK<br/>那这个阿迪口我们刚才已经讲了<br/>你只要要看的话<br/>你就把它乱<br/>然后按一下<br/>这个VBU等他出现之后啊你把这个拉出来<br/>然后拉出来因为前面这个每一次都不一样吗<br/>所以其他人也没有办法进来啊除非他他就是用啊这个复制<br/>所以我这里就打一点麦<br/>然后你只要想看的话哎我这个就是已经跟你同一个版本了<br/>好所以我讲这个让他起来<br/>我点这个啊steady<br/>我就看得到了<br/>我就看得到我的静态而且我点这个就是我的网址<br/>所以你编完之后还没送之前你就可以先试着啊<br/>比方说我内容管理系统我要加标题我要改<br/>所以我就跑到我的这一个答案来<br/>我的内容管理我这里要加2<br/>啊那已经存了所以在这里我用箭头把它拉出来再给我转挡<br/>那再转完之后我再从这里再软弱它就是最新的<br/>就这样所以你确定这个是你要送走的版本之后<br/>你再进入这个<br/>get<br/>然后你再告诉他说我已经改版了<br/>然后改版之后确定一下没什么问题你再把它谱写上去<br/>好那我们这个影片我试着纯看看<br/>我们刚刚是record是shift Ctrl啊嘛<br/>然后现在要结束是shift Ctrl加上s</p>
<h2>w1 odoo</h2>
<p></p>
<p><iframe allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" allowfullscreen="allowfullscreen" frameborder="0" height="315" referrerpolicy="strict-origin-when-cross-origin" src="https://www.youtube.com/embed/6JXeRFQwx3w?si=Xjd0Mpwk3Hi0F3qh" title="YouTube video player" width="560"></iframe></p>
<p>好的。<br/>好那麼我這邊建的這個演示是<br/>有這個PLM<br/>主要是這個PLM模組產品生命週期管理<br/>好那你管理者的話進來啊就是你建這個<br/>尋找的第一個人<br/>好就是你登記的這個直接到<br/>這個歐度打卡OK<br/>然後三亞有一個賬號哎這個<br/>你就是管理者<br/>OK然後你可以再加入其他的這個使用者<br/>好然後你一進來之後啊其實你就可以直接<br/>先建一個新的因爲我們有主要是有兩個產品嗎<br/>哦這是兩個報告好<br/>那你從這個大師他這裏<br/>你現在就一旦8個人都早起了之後<br/>你知道他的學號<br/>你就用他學號小老鼠N FU這個Email來聯絡他<br/>然後你必須要先把這個Deita的這個產品先建起來<br/>好然後他這邊呢<br/>主要就是因爲我們還沒有還不能賣嗎<br/>就還沒有完成<br/>好所以基本上你定義的部分就是你用新產品<br/>然後定定義一個因爲我們要來研究<br/>上學起的這個鋼球平衡臺好<br/>那裏面呢因爲他還不能賣所以這裏面沒有意思就還沒完成的意思<br/>好那底下這邊你就可以設定說有沒有啊<br/>爲了完成這一個<br/>那麼專案或者是產品的開發<br/>你有哪些活動啊<br/>這邊那活動的部分<br/>那一件的啊他那一件可以說我要通知他<br/>我要打電話給他<br/>我要開一個會<br/>然後這個零組件繪圖是我剛加的<br/>好然後你這個新的類型的部分其實是可以自己加的<br/>因爲他這一個歐賭最大的這個特色就是說因爲他是開遠的啊然後<br/>你很容易去做刻字畫<br/>好那基本上這個<br/>所謂的這個你活動的類別啊這個只是資料庫其中的一個表單哎<br/>好所以你只要找到這個TV T的類別你就可以新增<br/>好那這個是代辦事項<br/>好那這個是要求某人要上傳這個相關的文件打好那你在這邊我就對某<br/>總共對某了三個XTV t<br/>然後有兩個標誌<br/>啊然後這邊呢其實他這個還不錯就是你進來只要你的標誌<br/>因爲我<br/>在裏面只需要打入UL的連接啊他就會直接啊這個把它變成網址<br/>然後我可以可以上傳這個圖擋<br/>好然後這裏面Demo的部分就是<br/>組長最好就是把把工作都交給別人啊<br/>好所以我這裏面就請第一個主人說你瞭解一下怎麼樣把啦轉成PDF<br/>好然後我給他五天的時間<br/>好那你有問題你就回報啊<br/>然後我告訴第二個主人說哎<br/>你到昂血可去完成這個鋼球平衡臺的領主見會所<br/>好然後我叫第三個主頁說那你把它轉到這裏面主力模擬<br/>反正你有7個人可以用嗎啊<br/>然後組長因爲要分配啊基本上組長不是不會做我都會做但是麻煩你做<br/>而且時間都定好<br/>你有問題你就回報<br/>然後我這邊在模擬說好呢<br/>關萬你而賽之後啊<br/>他的賬號會收到他的一面<br/>所以他的一面他就會收到這個<br/>啊他總共收到兩個了哈因爲可能中間我有更改<br/>那收到的部分呢<br/>他這上面就會描述說到底要求你做什麼<br/>然後你只要回來因爲你必須要先到定<br/>啊你必須要先到店之後啊他從這個面有他就可以檢示你到底要我做什麼<br/>所以點回來之後啊我就可以看到這個產品<br/>那這個產品基本上你只要直接登錄的話<br/>因爲他是還沒有成型的他也在開發根本還沒完成<br/>所以他就時間上的話他是未來產品<br/>好那前面這邊基本上都是<br/>可能都是能賣的或者是零組件或者已經完成的雛形等等<br/>那我們因爲沒有還沒完成<br/>所以你只要單獨從他這個組員的賬號進來要看的話<br/>你必須要按這個未來纔看得到啊<br/>或者是你從沒有這邊直接點他就會連接回來哦<br/>那連接回來你就可以看到他上面這邊呢他他應該<br/>我不曉得他是不是可以讓我們打因爲打電話是要付錢的啊<br/>理論上應該<br/>他應該不會賭那麼大了啊<br/>就是我們在那邊打的話是他付錢了因爲現在是在他的設備啊<br/>那我不曉得收到電話了要不要付錢了啊不曉得是不是0204那種<br/>好那這個不曉得<br/>所以這裏面就是說你之前可能還不知道<br/>因爲反正他上面沒有我們的恰舉的這個信用卡的資料<br/>其實還好<br/>然後只會產生錯誤力<br/>所以這裏面你就可以看一下<br/>就是你剛纔在指定的部分他就會出現在啊這個頁面上啊<br/>那有問題的話你就跟他編輯說我時間不夠啊<br/>啊然後我不行那你要你要解釋一下到底啊這個進度的這個問題<br/>好然後只要需要的話你就可以說<br/>好那我們開個會對吧<br/>爲什麼都是我做的對吧<br/>好那這裏面開個會大家講清楚<br/>好所以這裏面其實意思就是說你這樣子把所有的過程都留下來的話<br/>其實你所有人就可以分佔在不同的這個時區了<br/>好然後你家有一些議題或者是你到底誰要做這個誰要做那個<br/>好然後把問題每一個時段就是我一天可能花個半小時或者一小時<br/>或者一個禮拜三個小時<br/>好然後我到底做了什麼<br/>然後就這樣做一個交代<br/>所以我想這個你可以先這個可能要好幾個禮拜你才組<br/>組員跟組長之間你纔會知道說啊這個要怎麼來使用這個套件了哈所以<br/>你可能先有啊一兩個組員呢<br/>你先登記一下PS M這個模組<br/>然後試着模擬看看等到你全部都啊這個瞭解他的這個運作的方式之後啊<br/>然後你再啊把所有的這些主人都把他弄進來<br/>OK所以我現在把他要結束的話我是shift Ctrl加stop</p>
<h2>w1 2b 3</h2>
<p><iframe allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" allowfullscreen="allowfullscreen" frameborder="0" height="315" referrerpolicy="strict-origin-when-cross-origin" src="https://www.youtube.com/embed/-ZmDQZ9ZV-Y?si=XCA4ZN7GjibHKran" title="YouTube video player" width="560"></iframe></p>
<p>OK<br/>好所以双重认证啊其实就是<br/>你在电脑上要登录的话<br/>啊比方说我这个之所以能够登录啊<br/>我是已经通过他的双重认证<br/>茶叶<br/>所以你要设定的话你你必须要登录到get up<br/>我就第一次当然不可能双重认证了对<br/>然后你进来之后要赶快跑到这个账号账号的设定区<br/>然后找到他的这个密码跟认证这个<br/>项目<br/>啊这个password是密码吗<br/>哦send the kitchen是认证了<br/>好然后你点进来<br/>他内键底下这边呢他这个应该是没有启动的<br/>双重啊双重认证<br/>然后你给他启动的话像我我是绑定<br/>我这个是绑定到<br/>我的手表<br/>假如你有智慧手表跟手机可以连的话<br/>你就可以安装这个<br/>只有这个是免费的<br/>OK只有这个是免费<br/>好那手机也可以安装这个假如你要的话<br/>你手机就<br/>搜寻一下这个ORC APP<br/>然后你手机也可以用<br/>OK<br/>好那只有这个套件是免费可以<br/>把那个密码因为你在像我在apple watch<br/>我是可以把手机上的这个APP安装在手表上<br/>好所以你就只要带手表不需要带手机就这样<br/>好所以进到这里面呢<br/>我们讲读一下<br/>好因为他这边即便是简体中文啊<br/>他还是英文呢哈所以你看他这边怎么讲<br/>他说从因为我们上学起就知道了吗<br/>从2023的3月<br/>逐渐的开始强制所有用户都必须要用双重认证<br/>哦所以你假如有以前旧的账号一定记得要赶快设因为他不知道什么时候<br/>OK<br/>他这里呀<br/>给你45天呐<br/>哦给你45天就你建账号之后45天内<br/>你一定要赶紧把他弄起来<br/>没有的话就进不去了<br/>哦那旧账号我就不晓得他的趴的起是怎样<br/>假如你的账号因为没有双重认证被锁定啊<br/>那重建的部分不能用原来的那个页面啊就比较麻烦了<br/>OK好因为他每一个一没有只能<br/>在这个GT上登记一次<br/>哦那他的使用就是除了连到这边之外<br/>他其实是利用<br/>利用这个二维条码了所以你只要看他下面的说明啊<br/>有没有这个是我们刚刚讲的账号下的设定<br/>好然后选择到密码跟认证<br/>好然后在这个区域<br/>在这个区域<br/>你点选说我要启用双重认证<br/>OK假如说英文的话是启用是enable<br/>哦那你讲<br/>知道这个是启用之后啊<br/>他这边就会出现一个二维条码<br/>OK所以这个二维条码你就必须要用你的手机<br/>打开你的Mobile<br/>意思就是GitHub Mobile里面他会有一个<br/>相机的选项<br/>然后拍这个二维条码<br/>然后他就基本上他就会秀出啊<br/>你可以输入到GitHub的<br/>数字就这样<br/>好然后一旦设好之后很重要的一点呢<br/>好像这个就是二维条码对吧<br/>然后你设置完之后<br/>很重要的一点呢你一定要下载这个回复的这个自创<br/>它叫做recovery coat<br/>因为万一你的手机坏掉<br/>OK或者是你的手机不见<br/>OK你你没办法用啊<br/>哎这个时候你就要靠这个回复码来取回账号<br/>就这样啊这个回复吗你要么把它存在<br/>随身碟要么把它同时送到你远端的比较常用的电子邮箱<br/>好那保证说<br/>最后你万一相关的设定都在手表和手手机上都不见了<br/>你还可以拿这一串哦他是一堆一堆这个编码的数字啊加上自串<br/>来取回你的这个账号<br/>把它下载<br/>否则他是啊他上面会有一个选项<br/>他说你存了之后啊你说我已经存我的回复码<br/>好然后这个时候你才可以把两段因为他很害怕<br/>万一你的啊这个两段是认证中间出问题的话<br/>这个账号形同是没有任何人可以登录<br/>OK那你只要是付费的话你还可以请他帮你处理啊<br/>也许打电话也许要保存你的这个账号因为你付费的他有认证吗<br/>啊你用信用卡或者用什么样式用什么方式来付钱对吧<br/>你说哎我我就是那个人<br/>也许还可以拿回来<br/>但是因为我们是免费的啊免费账号是没有这个金牛的部分<br/>所以只靠这一个回复码来取回你的认证<br/>OK好所以我们这个影片就可以把它存起来<br/>然后是在这里</p>
<h2>w1 2b 2</h2>
<p><iframe allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" allowfullscreen="allowfullscreen" frameborder="0" height="315" referrerpolicy="strict-origin-when-cross-origin" src="https://www.youtube.com/embed/Hpy1xeF0y0s?si=a5ZFtJuBcth-U2z3" title="YouTube video player" width="560"></iframe></p>
<p>确定啊<br/>开始啊<br/>好所以我们就连到我登录这里你必须要登录到<br/>这个get up<br/>这是登录到get up<br/>然后同时啊<br/>登录到Repri<br/>这是Repri<br/>好所以你必须要啊先把两边把它连起来<br/>OK意思就是说你要跑到你的<br/>repe的这个账号下<br/>这是你repe的账号<br/>你要点选他的看<br/>就是你账号下面的这个账号<br/>设定<br/>好所以我点选这个的话<br/>我目前呢<br/>在底下这里其实我已经有连连解了<br/>两边能不能信任<br/>靠的就是这个连线的服务<br/>就是这个<br/>你脚已经出现disconnect<br/>表示这个你已经做过了<br/>假如你是出现connect表示还没有连接<br/>所以假如你本身的detail是对应到connect<br/>你就给他点下去<br/>他会在你的detail安装一个应用程式<br/>OK表示你授权<br/>可以两边可以互通<br/>那互通之后的账号就会涨价<br/>你只要连接到账号下的设定<br/>OK<br/>那他底下这边就有一个应用城市<br/>这个是账号<br/>在整合区<br/>integration是整合的意思<br/>那底下它就有一个applications<br/>所以只要你两边的啊这个信任是成功的<br/>你点选这个application<br/>他就会出现这个<br/>所以你只要有application下面有reply<br/>表示你的get hot<br/>跟reply两边是信任<br/>意思就是说你带回假如把<br/>仓储啊输入到你的Repri<br/>改版完是可以退回来的<br/>这个就是我们要的<br/>好所以这个是第一步<br/>所以我们确定有这个之后啊<br/>我们待会再来做音破动作所以我们这个小影片呢我们先把它拍下来<br/>OK所以我们小影片<br/>这一小段啊<br/>我们先赶</p>
<h2>w1 2b 1</h2>
<p><!-- 以下的表單與按鈕與前面的 Javascript doSave 函式以及 FileSaver.min.js 互相配合 --></p>
<p><!-- 存擋表單開始 --></p>
<form><label>Filename: <input id="kw_filename" placeholder="input file name" type="text"/>.py</label> <input onclick="doSave('kw_py_src1', 'kw_filename1');" type="submit" value="Save"/></form>
<p><!-- 存擋表單結束 --></p>
<p></p>
<p><!-- 執行與清除按鈕開始 --></p>
<p><button id="kw_run1">Run</button> <button id="kw_show_console1">Output</button> <button id="kw_clear_console1">清除輸出區</button><button id="clear_bd1">清除繪圖區</button><button onclick="window.location.reload()">Reload</button></p>
<p><!-- 執行與清除按鈕結束 --></p>
<p></p>
<p><!-- 程式執行 ouput 區 --></p>
<div style="width: 100%; height: 100%;"><textarea autocomplete="off" id="kw_console1"></textarea></div>
<p><!-- Brython 程式執行的結果, 都以 brython_div1 作為切入位置 --></p>
<div id="brython_div1"></div>
<!-- editor1 結束 --><hr/><!-- ########################################## -->
<p>從 1 累加到 100 part2:</p>
<p><button id="add1to100part2">1 add to 100</button><button id="cango_three_gears">cango_three_gears</button><button id="bsnake">BSnake</button><button id="aitetris">AI Tetris</button><button id="threejsblock">Rotating Block</button></p>
<p><!-- 請注意, 這裡使用 Javascript 將 localStorage["kw_py_src2"] 中存在近端瀏覽器的程式碼, 由使用者決定存檔名稱--></p>
<p>
<script type="text/python3">
from browser import document as doc
import ace
# 清除畫布
def clear_bd2(ev):
    bd = doc["brython_div2"]
    bd.clear()
Ace3 = ace.Editor(editor_id="kw_editor2", console_id="kw_console2", container_id="kw__container2", storage_id="kw_py_src2" )
# 從 gist 取出程式碼後, 放入 editor 作為 default 程式
def run2():
    # 利用 get 取下 src 變數值
    try:
        url = doc.query["src2"]
    except:
        url = "https://gist.githubusercontent.com/mdecourse/0229a8a017091476a79700b8a190f185/raw/c3a6deaf717f8f2739a4b1392a5ab10936e9693a/from_1_add_to_10_1.py"
    prog = open(url).read()

    # 將程式載入編輯區
    Ace3.editor.setValue(prog)
    Ace3.editor.scrollToRow(0)
    Ace3.editor.gotoLine(0)
    # 直接執行程式
    #ns = {'__name__':'__main__'}
    #exec(prog, ns)
    # 按下 run 按鈕
    Ace3.run()

# 執行程式, 顯示輸出結果與清除輸出結果及對應按鈕綁定
doc['kw_run2'].bind('click', Ace3.run)
doc['kw_show_console2'].bind('click', Ace3.show_console)
doc['kw_clear_console2'].bind('click', Ace3.clear_console)
doc['clear_bd2'].bind('click', clear_bd2)
# 呼叫函式執行
run2()
</script>
</p>
<p></p>
<p><!-- add 1 to 100 part2 開始 -->
<script type="text/python3">
from browser import document as doc
import ace

# 清除畫布
def clear_bd2(ev):
    bd = doc["brython_div2"]
    bd.clear()

# 利用 ace 中的 Editor 建立 Ace2 物件, 其中的輸入變數分別對應到頁面中的編輯區物件
Ace4 = ace.Editor(editor_id="kw_editor2", console_id="kw_console2", container_id="kw__container2", storage_id="kw_py_src2" )

# 透過 Ace4 以類別建立一個通用的 button2, 可以在多個案例中將 gist 程導入編輯區

class button2:
    def __init__(self, url):
        self.url = url

    # 記得加入 event 輸入變數
    def do(self,ev):
        Ace4.editor.setValue(open(self.url).read())
        Ace4.editor.scrollToRow(0)
        Ace4.editor.gotoLine(0)
        Ace4.run()

add1to100_url = "https://gist.githubusercontent.com/mdecourse/0229a8a017091476a79700b8a190f185/raw/c48e37714f055c3a0027cbfef59e442a6ef659b9/from_1_add_to_100_1.py"

# 從 gist 取得程式碼
add_src = open(add1to100_url).read()
def add2(ev):
    Ace4.editor.setValue(add_src)
    Ace4.editor.scrollToRow(0)
    Ace4.editor.gotoLine(0)
    Ace4.run()

# id 為 "add1to100part2" 的按鈕點按時, 執行 add 方法
doc["add1to100part2"].bind('click', add2)
# 以下為運用 button2 class 的通用 gist 程式導入區
################################## cango_three_gears start
cango_three_gears_url = "https://gist.githubusercontent.com/mdecycu/d9082d678096bd58378d6afe2c7fa05d/raw/f7a85d737d6723d5e34c526d5daee990ed92c32b/cango_three_gears_brython_div2.py"
cango_three_gears = button2(cango_three_gears_url)
doc["cango_three_gears"].bind("click", cango_three_gears.do)
################################## cango_three_gears end
################################## bsnake start
bsnake_url = "https://gist.githubusercontent.com/mdecycu/d9082d678096bd58378d6afe2c7fa05d/raw/f7a85d737d6723d5e34c526d5daee990ed92c32b/kmol_snakey.py"
bsnake = button2(bsnake_url)
doc["bsnake"].bind("click", bsnake.do)
################################## bsnake end
################################## aitetris start
aitetris_url = "https://gist.githubusercontent.com/mdecycu/d9082d678096bd58378d6afe2c7fa05d/raw/f7a85d737d6723d5e34c526d5daee990ed92c32b/pygame_to_brython_tetris_ai.py"
aitetris = button2(aitetris_url)
doc["aitetris"].bind("click", aitetris.do)
################################## aitetris end
################################## threejsblock start
threejsblock_url = "https://gist.githubusercontent.com/mdecycu/2c6323eff49b496d1bafd210f3ec9707/raw/df37802f9e8a386b6424f7945af622b1cd0a9ca5/threejs_rotating_block.py"
threejsblock = button2(threejsblock_url)
doc["threejsblock"].bind("click", threejsblock.do)
################################## threejsblock end
</script>
</p>
<p><!-- add 1 to 100 part2 結束--></p>
<!-- editor2 開始 -->
<p><!-- 用來顯示程式碼的 editor 區域 --></p>
<div id="kw_editor2" style="width: 600px; height: 300px;"></div>
<p><!-- 以下的表單與按鈕與前面的 Javascript doSave 函式以及 FileSaver.min.js 互相配合 --></p>
<p><!-- 存擋表單開始 --></p>
<form><label>Filename: <input id="kw_filename2" placeholder="input file name" type="text"/>.py</label> <input onclick="doSave('kw_py_src2', 'kw_filename2');" type="submit" value="Save"/></form>
<p><!-- 存擋表單結束 --></p>
<p></p>
<p><!-- 執行與清除按鈕開始 --></p>
<p><button id="kw_run2">Run</button> <button id="kw_show_console2">Output</button> <button id="kw_clear_console2">清除輸出區</button><button id="clear_bd2">清除繪圖區</button><button onclick="window.location.reload()">Reload</button></p>
<p><!-- 執行與清除按鈕結束 --></p>
<p></p>
<p><!-- 程式執行 ouput 區 --></p>
<div style="width: 100%; height: 100%;"><textarea autocomplete="off" id="kw_console2"></textarea></div>
<p><!-- Brython 程式執行的結果, 都以 brython_div1 作為切入位置 --></p>
<div id="brython_div2"></div>
<!-- editor2 結束 --><hr/>
<p>
<script src="https://unpkg.com/three@0.144.0/build/three.js" type="text/javascript"></script>
</p>